---
layout: base
---

{% set component = components | getComponentByName(page.fileSlug) %}

<div class="component-header">
  <h1>{{ component.title }} <span class="version-badge">v{{ component.version }}</span></h1>
  <p class="component-description">{{ component.description }}</p>
  <div class="component-meta">
    <span class="component-status status-{{ component.status }}">{{ component.status | title }}</span>
    <span class="component-platform">{{ component.platform | title }}</span>
    <span class="component-maintainer">Maintained by: {{ component.maintainer }}</span>
  </div>
</div>

<div class="component-tabs" x-data="{ activeTab: '{{ activeTab | default('design') }}' }">
  <div class="tab-list">
    {% for tab in component.tabs %}
      <button 
        class="tab-button" 
        :class="{ 'active': activeTab === '{{ tab }}' }" 
        @click="activeTab = '{{ tab }}'">
        {{ tab | title }}
      </button>
    {% endfor %}
  </div>

  <div class="tab-content">
    <div x-show="activeTab === 'design'" class="tab-panel" id="design">
      <h2>Anatomy</h2>
      <div class="anatomy-section">
        {{ sections.anatomy | markdown | safe }}
      </div>

      <h2>Considerations</h2>
      <div class="considerations-section">
        {{ sections.considerations | markdown | safe }}
      </div>

      <h2>Usage</h2>
      <div class="usage-section">
        {{ sections.usage | markdown | safe }}
      </div>

      <h2>Behavior</h2>
      <div class="behavior-section">
        {{ sections.behavior | markdown | safe }}
      </div>

      <h2>Best practices</h2>
      <div class="best-practices-section">
        {{ sections["best-practices"] | markdown | safe }}
      </div>

      <h2>Specifications</h2>
      <div class="specifications-section">
        {{ sections.specifications | markdown | safe }}
      </div>
    </div>

    <div x-show="activeTab === 'code'" class="tab-panel" id="code">
      <h2>Installation</h2>
      <p>How to add component-specific imports to your project. For information on placement of external code, if you are integrating from SVN, check component for details.</p>
      
      <h2>Attributes</h2>
      <p>When using properties in JavaScript, we would that properties inherit the APIs that follow for clarity.</p>
      
      <div class="code-table">
        <table>
          <thead>
            <tr>
              <th>Attribute</th>
              <th>Type</th>
              <th>Default</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <!-- Component attributes would be dynamically populated here -->
            <tr>
              <td>prop1</td>
              <td>string</td>
              <td>null</td>
              <td>Description of prop1</td>
            </tr>
            <tr>
              <td>prop2</td>
              <td>boolean</td>
              <td>false</td>
              <td>Description of prop2</td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <h2>States</h2>
      <div class="code-table">
        <table>
          <thead>
            <tr>
              <th>Name</th>
              <th>Default state</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <!-- Component states would be dynamically populated here -->
            <tr>
              <td>active</td>
              <td>false</td>
              <td>When the component is in active state</td>
            </tr>
            <tr>
              <td>disabled</td>
              <td>false</td>
              <td>When the component is disabled</td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <h2>Events</h2>
      <div class="code-table">
        <table>
          <thead>
            <tr>
              <th>Name</th>
              <th>Event context</th>
            </tr>
          </thead>
          <tbody>
            <!-- Component events would be dynamically populated here -->
            <tr>
              <td>onChange</td>
              <td>{ value: newValue }</td>
            </tr>
            <tr>
              <td>onFocus</td>
              <td>{ event }</td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <h2>CSS helper classes</h2>
      <div class="code-table">
        <table>
          <thead>
            <tr>
              <th>CSS name</th>
              <th>Applies to</th>
              <th>Outcome</th>
            </tr>
          </thead>
          <tbody>
            <!-- CSS classes would be dynamically populated here -->
            <tr>
              <td>.ds-component</td>
              <td>Root element</td>
              <td>Base styling</td>
            </tr>
            <tr>
              <td>.ds-component--active</td>
              <td>Root element</td>
              <td>Styling for active state</td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <h2>Code example</h2>
      {% include "partials/code-snippet.njk" %}
    </div>

    <div x-show="activeTab === 'accessibility'" class="tab-panel" id="accessibility">
      <h2>Accessibility</h2>
      
      <h3>ARIA Heading level</h3>
      <p>Ensure that heading levels do not skip heading level, and that headings match their visual importance. The value of the attributes should be set accordingly based on the existing section's page structure. For this component, use h3 or more information.</p>
      
      <h3>Implementation</h3>
      <p>Refer to the accessibility feature for more information.</p>
      
      <h3>Keyboard Navigation</h3>
      <ul>
        <li>Tab: Moves focus to the next focusable element</li>
        <li>Shift+Tab: Moves focus to the previous focusable element</li>
        <li>Enter/Space: Activates the focused element</li>
      </ul>
      
      <h3>Screen Reader Support</h3>
      <p>This component includes appropriate ARIA attributes to ensure proper screen reader announcements.</p>
    </div>

    <div x-show="activeTab === 'examples'" class="tab-panel" id="examples">
      <h2>Examples</h2>
      
      {% include "components/" + page.fileSlug + "/example.njk" %}
      
      <h3>Code for this example:</h3>
      <pre><code class="language-html">{% include "components/" + page.fileSlug + "/example.njk" %}</code></pre>
    </div>
  </div>
</div>

{{ content | safe }}
